https://www.hackerearth.com/practice/data-structures/arrays/multi-dimensional/practice-problems/algorithm/monk-and-inversions-arrays-strings/

Monk's best friend Micro, who happen to be an awesome programmer, got him an integer matrix M of size N x N for his birthday. Monk is taking coding classes from Micro.
They have just completed array inversions and Monk was successful in writing a program to count the number of inversions in an array.
Now, Micro has asked Monk to find out the number of inversion in the matrix M.
Number of inversions, in a matrix is defined as the number of unordered pairs of cells {(i, j), (p, q)} such that M[i][j]>M[p][q] and i<=p & j<=q.
Monk is facing a little trouble with this task and since you did not got him any birthday gift, you need to help him with this task.

Input:
First line consists of a single integer T denoting the number of test cases.
First line of each test case consists of one integer denoting N. Following N lines consists of N space separated integers denoting the matrix M.

Output:
Print the answer to each test case in a new line.

Constraints:
1<=T<=100
1<=M<=20
1<=M[i][j]<=1000